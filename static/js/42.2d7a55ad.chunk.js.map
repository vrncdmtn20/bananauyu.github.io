{"version":3,"sources":["pages/auth/Login.js"],"names":["Login","history","useState","email","setEmail","password","setPassword","loading","setLoading","user","useSelector","state","useEffect","location","token","push","dispatch","useDispatch","roleBasedRedirect","res","intended","from","data","role","handleSubmit","e","a","preventDefault","auth","signInWithEmailAndPassword","result","getIdTokenResult","idTokenResult","createOrUpdateUser","then","type","payload","name","_id","catch","err","console","log","toast","error","message","googleLogin","signInWithPopup","googleAuthProvider","className","onSubmit","value","onChange","target","placeholder","autoFocus","onClick","block","shape","icon","size","disabled","length","to"],"mappings":"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","file":"static/js/42.2d7a55ad.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { auth, googleAuthProvider } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { Button } from \"antd\";\nimport { MailOutlined, GoogleOutlined } from \"@ant-design/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { createOrUpdateUser } from \"../../functions/auth\";\n\nconst Login = ({ history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const { user } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    let intended = history.location.state;\n    if (intended) {\n      return;\n    } else {\n      if (user && user.token) history.push(\"/\");\n    }\n  }, [user, history]);\n\n  let dispatch = useDispatch();\n\n  const roleBasedRedirect = (res) => {\n    // check if intended\n    let intended = history.location.state;\n    if (intended) {\n      history.push(intended.from);\n    } else {\n      if (res.data.role === \"admin\") {\n        history.push(\"/admin/dashboard\");\n      } else {\n        history.push(\"/user/history\");\n      }\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    // console.table(email, password);\n    try {\n      const result = await auth.signInWithEmailAndPassword(email, password);\n      // console.log(result);\n      const { user } = result;\n      const idTokenResult = await user.getIdTokenResult();\n\n      createOrUpdateUser(idTokenResult.token)\n        .then((res) => {\n          dispatch({\n            type: \"LOGGED_IN_USER\",\n            payload: {\n              name: res.data.name,\n              email: res.data.email,\n              token: idTokenResult.token,\n              role: res.data.role,\n              _id: res.data._id,\n            },\n          });\n          roleBasedRedirect(res);\n        })\n        .catch((err) => console.log(err));\n\n      // history.push(\"/\");\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n      setLoading(false);\n    }\n  };\n\n  const googleLogin = async () => {\n    auth\n      .signInWithPopup(googleAuthProvider)\n      .then(async (result) => {\n        const { user } = result;\n        const idTokenResult = await user.getIdTokenResult();\n        createOrUpdateUser(idTokenResult.token)\n          .then((res) => {\n            dispatch({\n              type: \"LOGGED_IN_USER\",\n              payload: {\n                name: res.data.name,\n                email: res.data.email,\n                token: idTokenResult.token,\n                role: res.data.role,\n                _id: res.data._id,\n              },\n            });\n            roleBasedRedirect(res);\n          })\n          .catch((err) => console.log(err));\n        // history.push(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n        toast.error(err.message);\n      });\n  };\n\n  const loginForm = () => (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <input\n          type=\"email\"\n          className=\"form-control\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Your email\"\n          autoFocus\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Your password\"\n        />\n      </div>\n\n      <br />\n      <Button\n        onClick={handleSubmit}\n        type=\"primary\"\n        className=\"mb-3\"\n        block\n        shape=\"round\"\n        icon={<MailOutlined />}\n        size=\"large\"\n        disabled={!email || password.length < 6}\n      >\n        Login with Email/Password\n      </Button>\n    </form>\n  );\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3\">\n          {loading ? (\n            <h4 className=\"text-danger\">Loading...</h4>\n          ) : (\n            <h4>Login</h4>\n          )}\n          {loginForm()}\n\n          <Button\n            onClick={googleLogin}\n            type=\"danger\"\n            className=\"mb-3\"\n            block\n            shape=\"round\"\n            icon={<GoogleOutlined />}\n            size=\"large\"\n          >\n            Login with Google\n          </Button>\n\n          <Link to=\"/forgot/password\" className=\"float-right text-danger\">\n            Forgot Password\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}