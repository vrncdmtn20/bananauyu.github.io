{"version":3,"sources":["pages/auth/RegisterComplete.js"],"names":["RegisterComplete","history","useState","email","setEmail","password","setPassword","dispatch","useDispatch","useEffect","window","localStorage","getItem","handleSubmit","e","a","preventDefault","toast","error","length","auth","signInWithEmailLink","location","href","user","emailVerified","removeItem","currentUser","updatePassword","getIdTokenResult","idTokenResult","console","log","createOrUpdateUser","token","then","res","type","payload","name","data","role","_id","catch","err","push","message","className","onSubmit","value","disabled","onChange","target","placeholder","autoFocus"],"mappings":"6LAuGeA,UAjGU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACdC,mBAAS,IADK,mBACjCC,EADiC,KAC1BC,EAD0B,OAERF,mBAAS,IAFD,mBAEjCG,EAFiC,KAEvBC,EAFuB,KAKpCC,EAAWC,cAEfC,qBAAU,WACRL,EAASM,OAAOC,aAAaC,QAAQ,2BAGpC,CAACX,IAEJ,IAAMY,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,yDACnBD,EAAEE,iBAEGb,GAAUE,EAHI,uBAIjBY,IAAMC,MAAM,kCAJK,+BAQfb,EAASc,OAAS,GARH,uBASjBF,IAAMC,MAAM,+CATK,oDAcIE,IAAKC,oBACxBlB,EACAO,OAAOY,SAASC,MAhBD,mBAmBNC,KAAKC,cAnBC,wBAqBff,OAAOC,aAAae,WAAW,wBAE3BF,EAAOJ,IAAKO,YAvBD,UAwBTH,EAAKI,eAAevB,GAxBX,yBAyBamB,EAAKK,mBAzBlB,QAyBTC,EAzBS,OA2BfC,QAAQC,IAAI,OAAQR,EAAM,gBAAiBM,GAE3CG,YAAmBH,EAAcI,OAC9BC,MAAK,SAACC,GACL7B,EAAS,CACP8B,KAAM,iBACNC,QAAS,CACPC,KAAMH,EAAII,KAAKD,KACfpC,MAAOiC,EAAII,KAAKrC,MAChB+B,MAAOJ,EAAcI,MACrBO,KAAML,EAAII,KAAKC,KACfC,IAAKN,EAAII,KAAKE,UAInBC,OAAM,SAACC,GAAD,OAASb,QAAQC,IAAIY,MAG9B3C,EAAQ4C,KAAK,KA7CE,0DAgDjBd,QAAQC,IAAR,MACAf,IAAMC,MAAM,KAAM4B,SAjDD,0DAAH,sDAwElB,OACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wBACb,iDAtBN,0BAAMC,SAAUnC,GACd,2BAAOwB,KAAK,QAAQU,UAAU,eAAeE,MAAO9C,EAAO+C,UAAQ,IAEnE,2BACEb,KAAK,WACLU,UAAU,eACVE,MAAO5C,EACP8C,SAAU,SAACrC,GAAD,OAAOR,EAAYQ,EAAEsC,OAAOH,QACtCI,YAAY,WACZC,WAAS,IAEX,6BACA,4BAAQjB,KAAK,SAASU,UAAU,kBAAhC","file":"static/js/44.6adba90b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { useDispatch } from \"react-redux\";\nimport { createOrUpdateUser } from \"../../functions/auth\";\n\nconst RegisterComplete = ({ history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // const { user } = useSelector((state) => ({ ...state }));\n  let dispatch = useDispatch();\n\n  useEffect(() => {\n    setEmail(window.localStorage.getItem(\"emailForRegistration\"));\n    // console.log(window.location.href);\n    // console.log(window.localStorage.getItem(\"emailForRegistration\"));\n  }, [history]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // validation\n    if (!email || !password) {\n      toast.error(\"Email and password is required\");\n      return;\n    }\n\n    if (password.length < 6) {\n      toast.error(\"Password must be at least 6 characters long\");\n      return;\n    }\n\n    try {\n      const result = await auth.signInWithEmailLink(\n        email,\n        window.location.href\n      );\n      //   console.log(\"RESULT\", result);\n      if (result.user.emailVerified) {\n        // remove user email fom local storage\n        window.localStorage.removeItem(\"emailForRegistration\");\n        // get user id token\n        let user = auth.currentUser;\n        await user.updatePassword(password);\n        const idTokenResult = await user.getIdTokenResult();\n        // redux store\n        console.log(\"user\", user, \"idTokenResult\", idTokenResult);\n\n        createOrUpdateUser(idTokenResult.token)\n          .then((res) => {\n            dispatch({\n              type: \"LOGGED_IN_USER\",\n              payload: {\n                name: res.data.name,\n                email: res.data.email,\n                token: idTokenResult.token,\n                role: res.data.role,\n                _id: res.data._id,\n              },\n            });\n          })\n          .catch((err) => console.log(err));\n\n        // redirect\n        history.push(\"/\");\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n    }\n  };\n\n  const completeRegistrationForm = () => (\n    <form onSubmit={handleSubmit}>\n      <input type=\"email\" className=\"form-control\" value={email} disabled />\n\n      <input\n        type=\"password\"\n        className=\"form-control\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"Password\"\n        autoFocus\n      />\n      <br />\n      <button type=\"submit\" className=\"btn btn-raised\">\n        Complete Registration\n      </button>\n    </form>\n  );\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3\">\n          <h4>Register Complete</h4>\n          {completeRegistrationForm()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterComplete;\n"],"sourceRoot":""}