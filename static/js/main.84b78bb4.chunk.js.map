{"version":3,"sources":["App.js","serviceWorker.js","reducers/cartReducer.js","reducers/index.js","reducers/userReducer.js","reducers/searchReducer.js","reducers/drawerReducer.js","reducers/couponReducer.js","reducers/CODReducer.js","index.js","firebase.js","functions/auth.js"],"names":["Login","lazy","Register","Home","Header","SideDrawer","RegisterComplete","ForgotPassword","History","UserRoute","AdminRoute","Password","Wishlist","AdminDashboard","CategoryCreate","CategoryUpdate","SubCreate","SubUpdate","ProductCreate","AllProducts","ProductUpdate","Product","CategoryHome","SubHome","Shop","Cart","Checkout","CreateCouponPage","Payment","App","dispatch","useDispatch","useEffect","unsubscribe","auth","onAuthStateChanged","a","user","getIdTokenResult","idTokenResult","currentUser","token","then","res","type","payload","name","data","email","role","_id","catch","err","console","log","fallback","className","LoadingOutlined","exact","path","component","Boolean","window","location","hostname","match","initialState","localStorage","getItem","JSON","parse","rootReducer","combineReducers","state","action","search","text","cart","drawer","coupon","COD","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","googleAuthProvider","GoogleAuthProvider","createOrUpdateUser","authtoken","axios","post","headers","currentAdmin"],"mappings":"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","file":"static/js/main.84b78bb4.chunk.js","sourcesContent":["import React, { useEffect, lazy, Suspense } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { auth } from \"./firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { currentUser } from \"./functions/auth\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\n// using lazy\nconst Login = lazy(() => import(\"./pages/auth/Login\"));\nconst Register = lazy(() => import(\"./pages/auth/Register\"));\nconst Home = lazy(() => import(\"./pages/Home\"));\nconst Header = lazy(() => import(\"./components/nav/Header\"));\nconst SideDrawer = lazy(() => import(\"./components/drawer/SideDrawer\"));\n\nconst RegisterComplete = lazy(() => import(\"./pages/auth/RegisterComplete\"));\nconst ForgotPassword = lazy(() => import(\"./pages/auth/ForgotPassword\"));\nconst History = lazy(() => import(\"./pages/user/History\"));\nconst UserRoute = lazy(() => import(\"./components/routes/UserRoute\"));\nconst AdminRoute = lazy(() => import(\"./components/routes/AdminRoute\"));\nconst Password = lazy(() => import(\"./pages/user/Password\"));\nconst Wishlist = lazy(() => import(\"./pages/user/Wishlist\"));\nconst AdminDashboard = lazy(() => import(\"./pages/admin/AdminDashboard\"));\nconst CategoryCreate = lazy(() =>\n  import(\"./pages/admin/category/CategoryCreate\")\n);\nconst CategoryUpdate = lazy(() =>\n  import(\"./pages/admin/category/CategoryUpdate\")\n);\nconst SubCreate = lazy(() => import(\"./pages/admin/sub/SubCreate\"));\nconst SubUpdate = lazy(() => import(\"./pages/admin/sub/SubUpdate\"));\nconst ProductCreate = lazy(() => import(\"./pages/admin/product/ProductCreate\"));\nconst AllProducts = lazy(() => import(\"./pages/admin/product/AllProducts\"));\nconst ProductUpdate = lazy(() => import(\"./pages/admin/product/ProductUpdate\"));\nconst Product = lazy(() => import(\"./pages/Product\"));\nconst CategoryHome = lazy(() => import(\"./pages/category/CategoryHome\"));\nconst SubHome = lazy(() => import(\"./pages/sub/SubHome\"));\nconst Shop = lazy(() => import(\"./pages/Shop\"));\nconst Cart = lazy(() => import(\"./pages/Cart\"));\nconst Checkout = lazy(() => import(\"./pages/Checkout\"));\nconst CreateCouponPage = lazy(() =>\n  import(\"./pages/admin/coupon/CreateCouponPage\")\n);\nconst Payment = lazy(() => import(\"./pages/Payment\"));\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  // to check firebase auth state\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        const idTokenResult = await user.getIdTokenResult();\n        // console.log(\"user\", user);\n\n        currentUser(idTokenResult.token)\n          .then((res) => {\n            dispatch({\n              type: \"LOGGED_IN_USER\",\n              payload: {\n                name: res.data.name,\n                email: res.data.email,\n                token: idTokenResult.token,\n                role: res.data.role,\n                _id: res.data._id,\n              },\n            });\n          })\n          .catch((err) => console.log(err));\n      }\n    });\n    // cleanup\n    return () => unsubscribe();\n  }, [dispatch]);\n\n  return (\n    <Suspense\n      fallback={\n        <div className=\"col text-center p-5\">\n          __ React Redux EC\n          <LoadingOutlined />\n          MMERCE __\n        </div>\n      }\n    >\n      <Header />\n      <SideDrawer />\n      <ToastContainer />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/register/complete\" component={RegisterComplete} />\n        <Route exact path=\"/forgot/password\" component={ForgotPassword} />\n        <UserRoute exact path=\"/user/history\" component={History} />\n        <UserRoute exact path=\"/user/password\" component={Password} />\n        <UserRoute exact path=\"/user/wishlist\" component={Wishlist} />\n        <AdminRoute exact path=\"/admin/dashboard\" component={AdminDashboard} />\n        <AdminRoute exact path=\"/admin/category\" component={CategoryCreate} />\n        <AdminRoute\n          exact\n          path=\"/admin/category/:slug\"\n          component={CategoryUpdate}\n        />\n        <AdminRoute exact path=\"/admin/sub\" component={SubCreate} />\n        <AdminRoute exact path=\"/admin/sub/:slug\" component={SubUpdate} />\n        <AdminRoute exact path=\"/admin/product\" component={ProductCreate} />\n        <AdminRoute exact path=\"/admin/products\" component={AllProducts} />\n        <AdminRoute\n          exact\n          path=\"/admin/product/:slug\"\n          component={ProductUpdate}\n        />\n        <Route exact path=\"/product/:slug\" component={Product} />\n        <Route exact path=\"/category/:slug\" component={CategoryHome} />\n        <Route exact path=\"/sub/:slug\" component={SubHome} />\n        <Route exact path=\"/shop\" component={Shop} />\n        <Route exact path=\"/cart\" component={Cart} />\n        <UserRoute exact path=\"/checkout\" component={Checkout} />\n        <AdminRoute exact path=\"/admin/coupon\" component={CreateCouponPage} />\n        <UserRoute exact path=\"/payment\" component={Payment} />\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = [];\n\n// load cart items from local storage\nif (typeof window !== \"undefined\") {\n  if (localStorage.getItem(\"cart\")) {\n    initialState = JSON.parse(localStorage.getItem(\"cart\"));\n  } else {\n    initialState = [];\n  }\n}\n\nexport const cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { userReducer } from \"./userReducer\";\nimport { searchReducer } from \"./searchReducer\";\nimport { cartReducer } from \"./cartReducer\";\nimport { drawerReducer } from \"./drawerReducer\";\nimport { couponReducer } from \"./couponReducer\";\nimport { CODReducer } from \"./CODReducer\";\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  search: searchReducer,\n  cart: cartReducer,\n  drawer: drawerReducer,\n  coupon: couponReducer,\n  COD: CODReducer,\n});\n\nexport default rootReducer;\n","export const userReducer = (state = null, action) => {\n  switch (action.type) {\n    case \"LOGGED_IN_USER\":\n      return action.payload;\n    case \"LOGOUT\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export const searchReducer = (state = { text: \"\" }, action) => {\n  switch (action.type) {\n    case \"SEARCH_QUERY\":\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n","export const drawerReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"SET_VISIBLE\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export const couponReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"COUPON_APPLIED\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export const CODReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"COD\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./reducers\";\r\n\r\n// store\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  // </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBGSS3vXS7FIiLg7fxWuUmmRMTT2DXpwWs\",\n  authDomain: \"uyubananamango.firebaseapp.com\",\n  projectId: \"uyubananamango\",\n  storageBucket: \"uyubananamango.appspot.com\",\n  messagingSenderId: \"912856437828\",\n  appId: \"1:912856437828:web:61e2f89e944144659b1811\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n","import axios from \"axios\";\n\nexport const createOrUpdateUser = async (authtoken) => {\n  return await axios.post(\n    `https://bananauyu-api.onrender.com/create-or-update-user`,\n    {},\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n};\n\nexport const currentUser = async (authtoken) => {\n  return await axios.post(\n    `https://bananauyu-api.onrender.com/api/current-user`,\n    {},\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n};\n\nexport const currentAdmin = async (authtoken) => {\n  return await axios.post(\n    `https://bananauyu-api.onrender.com/api/current-admin`,\n    {},\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n};\n"],"sourceRoot":""}