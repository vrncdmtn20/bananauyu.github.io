{"version":3,"sources":["functions/user.js","components/nav/UserNav.js","components/cards/ShowPaymentInfo.js","components/order/Invoice.js","pages/user/History.js"],"names":["userCart","cart","authtoken","a","axios","post","headers","getUserCart","get","emptyUserCart","delete","saveUserAddress","address","applyCoupon","coupon","createOrder","stripeResponse","getUserOrders","getWishlist","removeWishlist","productId","put","addToWishlist","createCashOrderForUser","COD","couponTrueOrFalse","couponApplied","UserNav","className","to","ShowPaymentInfo","order","showStatus","paymentIntent","id","amount","toLocaleString","style","currency","toUpperCase","payment_method_types","status","Date","created","orderStatus","styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","title","fontSize","textAlign","author","marginBottom","subtitle","margin","text","image","marginVertical","marginHorizontal","header","color","footer","padding","pageNumber","position","bottom","left","right","Invoice","fixed","data","products","getContent","x","product","price","count","brand","History","useState","orders","setOrders","user","useSelector","state","useEffect","loadUserOrders","token","then","res","console","log","JSON","stringify","length","reverse","map","i","key","scope","p","shipping","CheckCircleOutlined","CloseCircleOutlined","showOrderInTable","document","fileName","showDownloadLink"],"mappings":"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","file":"static/js/23.5dc2a0ff.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const userCart = async (cart, authtoken) =>\n  await axios.post(\n    `https://bananauyu-api.onrender.com/api/user/cart`,\n    { cart },\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n\nexport const getUserCart = async (authtoken) =>\n  await axios.get(`https://bananauyu-api.onrender.com/api/user/cart`, {\n    headers: {\n      authtoken,\n    },\n  });\n\nexport const emptyUserCart = async (authtoken) =>\n  await axios.delete(`https://bananauyu-api.onrender.com/api/user/cart`, {\n    headers: {\n      authtoken,\n    },\n  });\n\nexport const saveUserAddress = async (authtoken, address) =>\n  await axios.post(\n    `https://bananauyu-api.onrender.com/api/user/address`,\n    { address },\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n\nexport const applyCoupon = async (authtoken, coupon) =>\n  await axios.post(\n    `https://bananauyu-api.onrender.com/api/user/cart/coupon`,\n    { coupon },\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n\nexport const createOrder = async (stripeResponse, authtoken) =>\n  await axios.post(\n    `https://bananauyu-api.onrender.com/api/user/order`,\n    { stripeResponse },\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n\nexport const getUserOrders = async (authtoken) =>\n  await axios.get(`https://bananauyu-api.onrender.com/api/user/orders`, {\n    headers: {\n      authtoken,\n    },\n  });\n\nexport const getWishlist = async (authtoken) =>\n  await axios.get(`https://bananauyu-api.onrender.com/api/user/wishlist`, {\n    headers: {\n      authtoken,\n    },\n  });\n\nexport const removeWishlist = async (productId, authtoken) =>\n  await axios.put(\n    `https://bananauyu-api.onrender.com/api/user/wishlist/${productId}`,\n    {},\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n\nexport const addToWishlist = async (productId, authtoken) =>\n  await axios.post(\n    `https://bananauyu-api.onrender.com/api/user/wishlist`,\n    { productId },\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n\nexport const createCashOrderForUser = async (\n  authtoken,\n  COD,\n  couponTrueOrFalse\n) =>\n  await axios.post(\n    `https://bananauyu-api.onrender.com/api/user/cash-order`,\n    { couponApplied: couponTrueOrFalse, COD },\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst UserNav = () => (\n  <nav>\n    <ul className=\"nav flex-column\">\n      <li className=\"nav-item\">\n        <Link to=\"/user/history\" className=\"nav-link\">\n          History\n        </Link>\n      </li>\n\n      <li className=\"nav-item\">\n        <Link to=\"/user/password\" className=\"nav-link\">\n          Password\n        </Link>\n      </li>\n\n      <li className=\"nav-item\">\n        <Link to=\"/user/wishlist\" className=\"nav-link\">\n          Wishlist\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default UserNav;\n","import React from \"react\";\n\nconst ShowPaymentInfo = ({ order, showStatus = true }) => (\n  <div>\n    <p>\n      <span>Order Id: {order.paymentIntent.id}</span>\n      {\" / \"}\n      <span>\n        Amount:{\" / \"}\n        {(order.paymentIntent.amount /= 100).toLocaleString(\"en-US\", {\n          style: \"currency\",\n          currency: \"USD\",\n        })}\n      </span>\n      {\" / \"}\n      <span>Currency: {order.paymentIntent.currency.toUpperCase()}</span>\n      {\" / \"}\n      <span>Method: {order.paymentIntent.payment_method_types[0]}</span>\n      {\" / \"}\n      <span>Payment: {order.paymentIntent.status.toUpperCase()}</span>\n      {\" / \"}\n      <span>\n        Orderd on:{\" / \"}\n        {new Date(order.paymentIntent.created * 1000).toLocaleString()}\n      </span>\n      {\" / \"}\n      <br />\n      {showStatus && (\n        <span className=\"badge bg-primary text-white\">\n          STATUS: {order.orderStatus}\n        </span>\n      )}\n    </p>\n  </div>\n);\n\nexport default ShowPaymentInfo;\n","import React from \"react\";\nimport { Document, Page, Text, StyleSheet } from \"@react-pdf/renderer\";\nimport {\n  Table,\n  TableHeader,\n  TableCell,\n  TableBody,\n  DataTableCell,\n} from \"@david.kucsai/react-pdf-table\";\n\nconst Invoice = ({ order }) => (\n  <Document>\n    <Page style={styles.body}>\n      <Text style={styles.header} fixed>\n        ~ {new Date().toLocaleString()} ~\n      </Text>\n      <Text style={styles.title}>Order Invoice</Text>\n      <Text style={styles.author}>BananaUyU K-PoP ShOp</Text>\n      <Text style={styles.subtitle}>Order Summary</Text>\n\n      <Table>\n        <TableHeader>\n          <TableCell>Title</TableCell>\n          <TableCell>Price</TableCell>\n          <TableCell>Quantity</TableCell>\n          <TableCell>Brand</TableCell>\n          <TableCell>Color</TableCell>\n        </TableHeader>\n      </Table>\n\n      <Table data={order.products}>\n        <TableBody>\n          <DataTableCell getContent={(x) => x.product.title} />\n          <DataTableCell getContent={(x) => `$${x.product.price}`} />\n          <DataTableCell getContent={(x) => x.count} />\n          <DataTableCell getContent={(x) => x.product.brand} />\n          <DataTableCell getContent={(x) => x.product.color} />\n        </TableBody>\n      </Table>\n\n      <Text style={styles.text}>\n        <Text>\n          Date: {\"               \"}\n          {new Date(order.paymentIntent.created * 1000).toLocaleString()}\n        </Text>\n        {\"\\n\"}\n        <Text>\n          Order Id: {\"         \"}\n          {order.paymentIntent.id}\n        </Text>\n        {\"\\n\"}\n        <Text>\n          Order Status: {\"  \"}\n          {order.orderStatus}\n        </Text>\n        {\"\\n\"}\n        <Text>\n          Total Paid: {\"       \"}\n          {order.paymentIntent.amount}\n        </Text>\n      </Text>\n\n      <Text style={styles.footer}> ~ Thank you for shopping with us ~ </Text>\n    </Page>\n  </Document>\n);\n\nconst styles = StyleSheet.create({\n  body: {\n    paddingTop: 35,\n    paddingBottom: 65,\n    paddingHorizontal: 35,\n  },\n  title: {\n    fontSize: 24,\n    textAlign: \"center\",\n  },\n  author: {\n    fontSize: 12,\n    textAlign: \"center\",\n    marginBottom: 40,\n  },\n  subtitle: {\n    fontSize: 18,\n    margin: 12,\n  },\n  text: {\n    margin: 12,\n    fontSize: 14,\n    textAlign: \"justify\",\n  },\n  image: {\n    marginVertical: 15,\n    marginHorizontal: 100,\n  },\n  header: {\n    fontSize: 12,\n    marginBottom: 20,\n    textAlign: \"center\",\n    color: \"grey\",\n  },\n  footer: {\n    padding: \"100px\",\n    fontSize: 12,\n    marginBottom: 20,\n    textAlign: \"center\",\n    color: \"grey\",\n  },\n  pageNumber: {\n    position: \"absolute\",\n    fontSize: 12,\n    bottom: 30,\n    left: 0,\n    right: 0,\n    textAlign: \"center\",\n    color: \"grey\",\n  },\n});\n\nexport default Invoice;\n","import React, { useState, useEffect } from \"react\";\nimport UserNav from \"../../components/nav/UserNav\";\nimport { getUserOrders } from \"../../functions/user\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\nimport { toast } from \"react-toastify\";\nimport ShowPaymentInfo from \"../../components/cards/ShowPaymentInfo\";\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\nimport Invoice from \"../../components/order/Invoice\";\n\nconst History = () => {\n  const [orders, setOrders] = useState([]);\n  const { user } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    loadUserOrders();\n  }, []);\n\n  const loadUserOrders = () =>\n    getUserOrders(user.token).then((res) => {\n      console.log(JSON.stringify(res.data, null, 4));\n      setOrders(res.data);\n    });\n\n  const showOrderInTable = (order) => (\n    <table className=\"table table-bordered\">\n      <thead className=\"thead-light\">\n        <tr>\n          <th scope=\"col\">Title</th>\n          <th scope=\"col\">Price</th>\n          <th scope=\"col\">Brand</th>\n          <th scope=\"col\">Color</th>\n          <th scope=\"col\">Count</th>\n          <th scope=\"col\">Shipping</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {order.products.map((p, i) => (\n          <tr key={i}>\n            <td>\n              <b>{p.product.title}</b>\n            </td>\n            <td>{p.product.price}</td>\n            <td>{p.product.brand}</td>\n            <td>{p.color}</td>\n            <td>{p.count}</td>\n            <td>\n              {p.product.shipping === \"Yes\" ? (\n                <CheckCircleOutlined style={{ color: \"green\" }} />\n              ) : (\n                <CloseCircleOutlined style={{ color: \"red\" }} />\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n\n  const showDownloadLink = (order) => (\n    <PDFDownloadLink\n      document={<Invoice order={order} />}\n      fileName=\"invoice.pdf\"\n      className=\"btn btn-sm btn-block btn-outline-primary\"\n    >\n      Download PDF\n    </PDFDownloadLink>\n  );\n\n  const showEachOrders = () =>\n    orders.reverse().map((order, i) => (\n      <div key={i} className=\"m-5 p-3 card\">\n        <ShowPaymentInfo order={order} />\n        {showOrderInTable(order)}\n        <div className=\"row\">\n          <div className=\"col\">{showDownloadLink(order)}</div>\n        </div>\n      </div>\n    ));\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-2\">\n          <UserNav />\n        </div>\n        <div className=\"col text-center\">\n          <h4>\n            {orders.length > 0 ? \"User purchase orders\" : \"No purchase orders\"}\n          </h4>\n          {showEachOrders()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default History;\n"],"sourceRoot":""}